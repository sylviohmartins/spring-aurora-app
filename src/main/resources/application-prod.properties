spring.config.activate.on-profile=prod

# Configurações para a instância principal do Aurora MySQL
spring.cloud.aws.region.auto=false
spring.cloud.aws.region.static=${AWS_REGION:sa-east-1}

# Identificador da instância escritora. O starter vai descobrir endpoint/porta.
cloud.aws.rds.instances[0].db-instance-identifier=${AURORA_WRITER_IDENTIFIER:gestaopagamentoscash-gestaodividas-awssae1aurmy-hom-0}

# Credenciais do banco (utilize variáveis de ambiente ou Secrets Manager para evitar hard-coding)
cloud.aws.rds.instances[0].username=${DB_USERNAME:aurora_user}
cloud.aws.rds.instances[0].password=${DB_PASSWORD:changeit}

# Nome do schema a ser usado na instância
cloud.aws.rds.instances[0].databaseName=${DB_NAME:aurora_db}

# Habilita suporte a réplicas: consultas com readOnly=true serão roteadas para o endpoint de leitura
cloud.aws.rds.instances[0].readReplicaSupport=true

# Porta explicitada porque a instância usa 8035 em vez de 3306
cloud.aws.rds.instances[0].port=${AURORA_WRITER_PORT:8035}

# Driver JDBC explicitado
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configurações do AWS Secrets Manager para resgatar credenciais sensíveis
spring.cloud.aws.secretsmanager.enabled=true
spring.cloud.aws.secretsmanager.default-context=aurora-app
spring.cloud.aws.secretsmanager.prefix=/config
spring.cloud.aws.secretsmanager.profile-separator=_
